import org.jenkinsci.plugins.pipeline.modeldefinition.Utils

// assuming an agent is configured as alpinei

def server = Artifactory.server 'jfrog'
def rtGradle = Artifactory.newGradleBuild()
rtGradle.resolver repo:'jcenter', server: server
rtGradle.useWrapper = true
rtGradle.usesPlugin = true
rtGradle.deployer.deployArtifacts = true
rtGradle.deployer.deployMavenDescriptors = true
rtGradle.deployer.mavenCompatible = true
def buildInfo = Artifactory.newBuildInfo()

node('alpine') {
  checkout scm
  def jenkinsUtils = load "./jenkins/Utils.groovy"
  def config = jenkinsUtils.getConfig()
  config.initialCommitHash = jenkinsUtils.getCommitHash()
  stage('Build') {
//    sh(script: './gradlew clean build')
  }
  stage('Create snapshot artifact') {

  }
  stage('Deploy snapshot') {
  
  }
  stage('Test snapshot') {
  
  }
  stage('Release') {
    git(
      url: scm.getUserRemoteConfigs()[0].getUrl(),
      branch: config.TRUNK_NAME,
      credentialsId: config.SSH_KEY_ID
    )
    if(jenkinsUtils.isReleasable(config)) {
      // Release lifecycle
      rtGradle.deployer server: server, repo: 'libs-release-local'
      rtGradle.run rootDir: ".", buildFile: 'build.gradle', tasks: 'release -Prelease.useAutomaticVersion=true', buildInfo: buildInfo
    } else {
      Utils.markStageSkippedForConditional("$STAGE_NAME")
    }
  }
}
